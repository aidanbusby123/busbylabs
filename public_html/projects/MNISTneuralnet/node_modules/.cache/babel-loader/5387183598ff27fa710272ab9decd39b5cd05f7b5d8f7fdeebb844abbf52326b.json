{"ast":null,"code":"import React,{useRef,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const canvasRef=useRef(null);const[prediction,setPrediction]=useState(null);const[probabilities,setProbabilities]=useState([]);// Store probabilities for each digit\nconst blockSize=20;// Fixed block size\nconst brushSize=10;// Adjust brush size for smoother drawing\nlet lastTouch=null;// Store the last touch position\n// Function to clear the canvas\nconst clearCanvas=()=>{const canvas=canvasRef.current;const ctx=canvas.getContext('2d');ctx.fillStyle='white';// Set the canvas background to white\nctx.fillRect(0,0,canvas.width,canvas.height);// Fill the canvas with white\n};// Clear the canvas on initial load\nuseEffect(()=>{clearCanvas();// Prevent touch scrolling on the canvas\nconst canvas=canvasRef.current;const preventTouchScroll=e=>{e.preventDefault();};canvas.addEventListener('touchmove',preventTouchScroll,{passive:false});canvas.addEventListener('touchstart',preventTouchScroll,{passive:false});return()=>{canvas.removeEventListener('touchmove',preventTouchScroll);canvas.removeEventListener('touchstart',preventTouchScroll);};},[]);// Function to send the canvas data to the backend\nconst predictDigit=async()=>{const canvas=canvasRef.current;const ctx=canvas.getContext('2d');// Get the image data from the canvas\nconst imageData=ctx.getImageData(0,0,canvas.width,canvas.height);const grayscaleData=[];// Convert the canvas data to grayscale and normalize\nfor(let i=0;i<imageData.data.length;i+=4){const grayscale=(imageData.data[i]+imageData.data[i+1]+imageData.data[i+2])/3;const normalized=1-grayscale/255;// Invert so 0 is white and 1 is black\ngrayscaleData.push(normalized);}const resizedData=[];const scale=canvas.width/28;for(let y=0;y<28;y++){for(let x=0;x<28;x++){const startX=Math.floor(x*scale);const startY=Math.floor(y*scale);const endX=Math.floor((x+1)*scale);const endY=Math.floor((y+1)*scale);let sum=0;let count=0;for(let yy=startY;yy<endY;yy++){for(let xx=startX;xx<endX;xx++){const pixelIndex=yy*canvas.width+xx;sum+=grayscaleData[pixelIndex];count++;}}resizedData.push(sum/count);}}try{const response=await axios.post('https://busbylabs.com/projects/MNISTneuralnet/predict',{image:resizedData});console.log(\"Backend Response:\",response.data);// Debugging\nsetPrediction(response.data.digit);setProbabilities(response.data.probabilities||[]);// Handle missing probabilities\n}catch(error){console.error('Error predicting digit:',error);}};// Function to handle touch events for mobile users\nconst handleTouch=e=>{e.preventDefault();// Prevent scrolling or refreshing\nconst canvas=canvasRef.current;const ctx=canvas.getContext('2d');const rect=canvas.getBoundingClientRect();const touch=e.touches[0];const x=touch.clientX-rect.left;const y=touch.clientY-rect.top;if(lastTouch){// Draw a line from the last touch position to the current position\nctx.beginPath();ctx.moveTo(lastTouch.x,lastTouch.y);ctx.lineTo(x,y);ctx.strokeStyle='black';ctx.lineWidth=brushSize;ctx.lineCap='round';ctx.stroke();}// Update the last touch position\nlastTouch={x,y};};const handleTouchEnd=()=>{lastTouch=null;// Reset the last touch position when the touch ends\n};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Draw a Digit\"}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:560,height:560,style:{border:'1px solid black',width:'90vw',// Responsive width for mobile\nmaxWidth:'560px',// Limit maximum width\nheight:'auto'// Maintain aspect ratio\n},onMouseMove:e=>{if(e.buttons!==1)return;drawBlock(e);},onMouseDown:e=>drawBlock(e),onTouchMove:e=>handleTouch(e)// Add touch support\n,onTouchStart:e=>handleTouch(e)// Add touch support\n,onTouchEnd:handleTouchEnd// Reset touch position\n}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:predictDigit,style:{padding:'10px 20px',fontSize:'16px',margin:'10px',cursor:'pointer'},children:\"Predict\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearCanvas,style:{padding:'10px 20px',fontSize:'16px',margin:'10px',cursor:'pointer'},children:\"Clear\"})]}),prediction!==null&&/*#__PURE__*/_jsxs(\"h2\",{children:[\"Predicted Digit: \",prediction]}),Array.isArray(probabilities)&&probabilities.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Prediction Probabilities\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',gap:'5px',flexWrap:'wrap'},children:probabilities.map((prob,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',margin:'5px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'20px',// Adjust width for smaller screens\nheight:\"\".concat(prob*100,\"%\"),backgroundColor:'blue',margin:'0 auto'}}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px'},children:index})]},index))})]})]});}export default App;","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","App","canvasRef","prediction","setPrediction","probabilities","setProbabilities","blockSize","brushSize","lastTouch","clearCanvas","canvas","current","ctx","getContext","fillStyle","fillRect","width","height","preventTouchScroll","e","preventDefault","addEventListener","passive","removeEventListener","predictDigit","imageData","getImageData","grayscaleData","i","data","length","grayscale","normalized","push","resizedData","scale","y","x","startX","Math","floor","startY","endX","endY","sum","count","yy","xx","pixelIndex","response","post","image","console","log","digit","error","handleTouch","rect","getBoundingClientRect","touch","touches","clientX","left","clientY","top","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","handleTouchEnd","style","textAlign","children","ref","border","maxWidth","onMouseMove","buttons","drawBlock","onMouseDown","onTouchMove","onTouchStart","onTouchEnd","onClick","padding","fontSize","margin","cursor","Array","isArray","marginTop","display","justifyContent","gap","flexWrap","map","prob","index","concat","backgroundColor"],"sources":["/home/aidan/busbylabs/public_html/projects/MNISTneuralnet/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [prediction, setPrediction] = useState(null);\n  const [probabilities, setProbabilities] = useState([]); // Store probabilities for each digit\n\n  const blockSize = 20; // Fixed block size\n  const brushSize = 10; // Adjust brush size for smoother drawing\n  let lastTouch = null; // Store the last touch position\n\n  // Function to clear the canvas\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white'; // Set the canvas background to white\n    ctx.fillRect(0, 0, canvas.width, canvas.height); // Fill the canvas with white\n  };\n\n  // Clear the canvas on initial load\n  useEffect(() => {\n    clearCanvas();\n\n    // Prevent touch scrolling on the canvas\n    const canvas = canvasRef.current;\n\n    const preventTouchScroll = (e) => {\n      e.preventDefault();\n    };\n\n    canvas.addEventListener('touchmove', preventTouchScroll, { passive: false });\n    canvas.addEventListener('touchstart', preventTouchScroll, { passive: false });\n\n    return () => {\n      canvas.removeEventListener('touchmove', preventTouchScroll);\n      canvas.removeEventListener('touchstart', preventTouchScroll);\n    };\n  }, []);\n\n  // Function to send the canvas data to the backend\n  const predictDigit = async () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Get the image data from the canvas\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const grayscaleData = [];\n\n    // Convert the canvas data to grayscale and normalize\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      const grayscale = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;\n      const normalized = 1 - grayscale / 255; // Invert so 0 is white and 1 is black\n      grayscaleData.push(normalized);\n    }\n\n    const resizedData = [];\n    const scale = canvas.width / 28;\n    for (let y = 0; y < 28; y++) {\n      for (let x = 0; x < 28; x++) {\n        const startX = Math.floor(x * scale);\n        const startY = Math.floor(y * scale);\n        const endX = Math.floor((x + 1) * scale);\n        const endY = Math.floor((y + 1) * scale);\n\n        let sum = 0;\n        let count = 0;\n        for (let yy = startY; yy < endY; yy++) {\n          for (let xx = startX; xx < endX; xx++) {\n            const pixelIndex = yy * canvas.width + xx;\n            sum += grayscaleData[pixelIndex];\n            count++;\n          }\n        }\n        resizedData.push(sum / count);\n      }\n    }\n\n    try {\n      const response = await axios.post('https://busbylabs.com/projects/MNISTneuralnet/predict', {\n        image: resizedData,\n      });\n\n      console.log(\"Backend Response:\", response.data); // Debugging\n\n      setPrediction(response.data.digit);\n      setProbabilities(response.data.probabilities || []); // Handle missing probabilities\n    } catch (error) {\n      console.error('Error predicting digit:', error);\n    }\n  };\n\n  // Function to handle touch events for mobile users\n  const handleTouch = (e) => {\n    e.preventDefault(); // Prevent scrolling or refreshing\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n\n    const touch = e.touches[0];\n    const x = touch.clientX - rect.left;\n    const y = touch.clientY - rect.top;\n\n    if (lastTouch) {\n      // Draw a line from the last touch position to the current position\n      ctx.beginPath();\n      ctx.moveTo(lastTouch.x, lastTouch.y);\n      ctx.lineTo(x, y);\n      ctx.strokeStyle = 'black';\n      ctx.lineWidth = brushSize;\n      ctx.lineCap = 'round';\n      ctx.stroke();\n    }\n\n    // Update the last touch position\n    lastTouch = { x, y };\n  };\n\n  const handleTouchEnd = () => {\n    lastTouch = null; // Reset the last touch position when the touch ends\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Draw a Digit</h1>\n      <canvas\n        ref={canvasRef}\n        width={560}\n        height={560}\n        style={{\n          border: '1px solid black',\n          width: '90vw', // Responsive width for mobile\n          maxWidth: '560px', // Limit maximum width\n          height: 'auto', // Maintain aspect ratio\n        }}\n        onMouseMove={(e) => {\n          if (e.buttons !== 1) return;\n          drawBlock(e);\n        }}\n        onMouseDown={(e) => drawBlock(e)}\n        onTouchMove={(e) => handleTouch(e)} // Add touch support\n        onTouchStart={(e) => handleTouch(e)} // Add touch support\n        onTouchEnd={handleTouchEnd} // Reset touch position\n      />\n      <div>\n        <button\n          onClick={predictDigit}\n          style={{\n            padding: '10px 20px',\n            fontSize: '16px',\n            margin: '10px',\n            cursor: 'pointer',\n          }}\n        >\n          Predict\n        </button>\n        <button\n          onClick={clearCanvas}\n          style={{\n            padding: '10px 20px',\n            fontSize: '16px',\n            margin: '10px',\n            cursor: 'pointer',\n          }}\n        >\n          Clear\n        </button>\n      </div>\n      {prediction !== null && <h2>Predicted Digit: {prediction}</h2>}\n\n      {Array.isArray(probabilities) && probabilities.length > 0 && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Prediction Probabilities</h3>\n          <div style={{ display: 'flex', justifyContent: 'center', gap: '5px', flexWrap: 'wrap' }}>\n            {probabilities.map((prob, index) => (\n              <div key={index} style={{ textAlign: 'center', margin: '5px' }}>\n                <div\n                  style={{\n                    width: '20px', // Adjust width for smaller screens\n                    height: `${prob * 100}%`,\n                    backgroundColor: 'blue',\n                    margin: '0 auto',\n                  }}\n                ></div>\n                <span style={{ fontSize: '12px' }}>{index}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}